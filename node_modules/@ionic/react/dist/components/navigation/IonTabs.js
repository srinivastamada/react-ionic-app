import React, { Component } from 'react';
import { IonTabBar, IonRouterOutlet } from '../index';
const hostStyles = {
    display: 'flex',
    position: 'absolute',
    top: '0',
    left: '0',
    right: '0',
    bottom: '0',
    flexDirection: 'column',
    width: '100%',
    height: '100%',
    contain: 'layout size style'
};
const tabsInner = {
    position: 'relative',
    flex: 1,
    contain: 'layout size style'
};
export default class IonTabs extends Component {
    render() {
        let outlet;
        let tabBar;
        React.Children.forEach(this.props.children, child => {
            if (typeof child === 'object' && child.type === IonRouterOutlet) {
                outlet = child;
            }
            if (typeof child === 'object' && child.type === IonTabBar) {
                tabBar = child;
            }
        });
        return (React.createElement("div", { style: hostStyles },
            tabBar.props.slot === 'top' ? tabBar : null,
            React.createElement("div", { style: tabsInner, className: "tabs-inner" }, outlet),
            tabBar.props.slot === 'bottom' ? tabBar : null));
    }
}
//# sourceMappingURL=IonTabs.js.map